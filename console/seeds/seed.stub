<?php namespace {{studly_author}}\{{studly_plugin}}\Models;

use Seeder;



class Seed{{ seedClassName }} extends Seeder
{
    public function run()
    {
{% if classOptions.datasource %}
        $toDeletes = \{{className}}::where('data_source', '{{lower_model}}')->get();
        foreach($toDeletes as $delete) {
                $delete->forceDelete();
        }
{% else %}
        \{{className}}::truncate();
{% endif %}
            
{% for numKey,data in datas %}
{% if conserveId %}
        $inject_{{numKey}} = new \{{className}}();
        $inject_{{numKey}}->id = {{data.id}};
        $inject_{{numKey}}->fill({{data.w_dataString |raw}});
{% else %}
        $inject_{{numKey}} = \{{className}}::create({{data.w_dataString |raw}});
{% endif %}
        
{% if data.w_fileconfig%}
        {{ stubCreator('seeds/fileupload.stub', _context, data.w_fileconfig) | ident(1) }}
{% endif %}

{% for ask in  data.rules.rule_asks %}
{% if ask.data_to_string %}
        $inject_{{numKey}}->rule_asks()->create({{ask.data_to_string |raw}});
{% endif %}
{% endfor %}
{% for fnc in  data.rules.rule_fncs %}
{% if fnc.data_to_string %}
        $inject_{{numKey}}->rule_fncs()->create({{fnc.data_to_string |raw}});
{% endif %}
{% endfor %}
        $inject_{{numKey}}->save();

{% endfor %} 
    }

}
